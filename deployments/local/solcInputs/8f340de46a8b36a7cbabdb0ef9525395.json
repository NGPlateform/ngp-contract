{
  "language": "Solidity",
  "sources": {
    "contracts/sign.sol": {
      "content": "//SPDX-License-Identifier: MIT\n\npragma solidity 0.8.8;\n\ncontract SIGN {\n    function hashMessage(bytes32  message) public view returns (bytes32 messageHash) {\n    messageHash = keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", message));\n    return messageHash;\n  }\n\n  function verifyEcrecover(bytes32  messageHash, uint8 v, bytes32 r, bytes32 s) public view returns (address recoveredAddress) {\n    bytes32 hash = hashMessage(messageHash);\n    return  ecrecover(hash, v, r, s);\n  }\n}"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}